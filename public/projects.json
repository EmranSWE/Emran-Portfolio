[
  {
    "_id": "654b3719b4bdaaed65ad4e9c",
    "name": " Stay Solution BD",
    "description": "User Experience Enhancement: Engineered a scalable platform architecture ensuring smooth user navigation and interaction, tailored to the distinct roles within the system.  Property Listing System: Implemented an intuitive property listing feature, enabling owners to effectively market their properties, which has increased listing visibility and potential customer reach.  Automation of Booking System: Automated the booking confirmation and payment processes, slashing customer inquiries by 50% and boosting user satisfaction by 20%.  Custom Dashboard Design: Created role-specific dashboards that streamlined rental operations and transaction management, significantly improving operational efficiency.  Analytical Tools for Market Efficiency: Introduced rental preference analytics and price optimization tools, driving a more efficient real estate market through data-driven decision-making.  Communication Channel: Established a dynamic issue reporting and communication system, fostering better interactions between tenants and owners, which led to improved user experience metrics.  Security Enhancements: Implemented JWT for secure signup and login procedures, ensuring robust user account protection and privacy.  Tech Stack and Development: Developed a full-stack solution utilizing Next.js, TypeScript, and Redux for a responsive front end; Node.js and Express for a reliable back end; Prisma ORM and PostgreSQL for database integrity; and JWT alongside Zod for secure and validated operations. Deployed the application seamlessly using Vercel.",
    "technology": "Next.js, TypeScript, and Redux Node.js, Express ,Prisma ORM , PostgreSQL. JWT , Zod f",
    "github": "https://github.com/EmranSWE/StaySolutionBD-frontend",
    "live": "https://stay-solution-bd-emranswe.vercel.app/",
    "img": "https://i.ibb.co/QXHbHFX/screencapture-stay-solution-bd-vercel-app-2023-11-05-19-35-35.png"
  },
  {
    "_id": "6386f27c194604e353da0012",
    "name": "EM Gimbal Manufacturing (MERN STACK)",
    "description": "Em gimbal manufacturer is a multi-functional website. \nIt's a gimbal manufacturer's website. A gimbal is a tool that uses motors and intelligent sensors to support and stabilize a camera â€“ meaning you can film silky smooth video footage while on the move. \nThis website helps the manufacturer and its customers to connect and hassle-free communicate with each other.\n A customer can buy the products and the admin can see all the purchases.\n User-wise feature written below: What Customer Can Do:\n A customer can see the different products on the Home page and Shop page, \n Customer can select buy now button for place order To place an order customer must need to be logged in To place an order, a customer can see their name, email address, and price already filled and some other information needs to fill up, such As Address, Phone, and Order Quantity (User can buy only more than the Minimum Order Quantity) After placing an order customers can see all the information in their dashboard> My Product page Then the customer can see a pay buttons on their dashboard> My Products> Payment> Pay and Cancel buttons. * Until payment is completed, customer can cancel their purchase If payment is completed, Then customer can see Paid and TransactionId Finally, when a admin shippment the delivery, customer can see their payment status is > Your product is delivered Customer Can Give Feedback. dashboard> My Review Customer Can see My Profile. dashboard> My Profile What Admin Can do: As an admin, Admin can see some extra options An admin can see all the user An admin can make another admin An admin can remove user An admin can view ALL Product : Which product payment is completed. Finally admin can make shipment to delivered the product And admin can add a new product: Dashboard> Add Product An admin can manage Product: Dashboard> Manage Product",
    "technology": "Front-End\tHTML5, CSS3, TailwindCSS ,DaisyUi,JavaScript ,React, ReactRouter Back-End\tNodeJs, ExpressJs, MongoDb,cors, dotenv, Stripe, Nodemailer, SendGrid,JWT Tools\timgbb, Firebase, Heroku, Git",
    "github": "https://github.com/EmranSWE/em-gimbal-manufacturing-client",
    "live": "https://em-manufacturing.web.app/",
    "img": "https://i.ibb.co/GPTVVL5/Screenshot.png"
  },
  {
    "_id": "6386f45f194604e353da0013",
    "name": "Easy Doctors Portal",
    "description": "The easy Doctors portal is online doctor and patient management service.In this website, patient can booking appointment.What Technology integrated: This website is doctor and patient management website JWT integrated for verify the real user Different types user can use it: Such as, petient, admin Verify role, where admin has special privilege For payment using stripe Digital payment gateway Nodemailer sendgrid integrated for autometic email send to the customer MongoDb/NoSql for stored data Heroku cloud platform for service supporting. What Admin Can do: As an admin, Admin can see some extra options An admin can see all the user An admin can make another admin An admin can remove user An admin can add a new doctor And admin can delete or manage all doctors What Patient can Do: A patient can see different treamnent Patient can select date for the booking If slot on that date is available, then patient can booking the appoinment After completion of booking, user can see their booking details on their dashboard. Then patient can see a pay option on their dashboard> My Appoinment page. If click on pay button then they can fillup their payment information. After completion of their payment, they can get a transectionId and an email.",
    "technology": "HTML5, CSS3, TailwindCSS, DaisyUi ,JavaScript ,React ,React Router, Firebase, Json Web Token For verify, Nodemailer ,sendgrid ,Digital payment: Stripe, MongoDB , Heroku",
    "github": "https://github.com/EmranSWE/easy-doctors-portal-client",
    "live": "https://easy-doctors-portal.web.app/",
    "img": "https://i.ibb.co/xC8FD9g/doctorporla.png"
  },
  {
    "_id": "6386f5b0194604e353da0014",
    "name": "The Genius Car doctor",
    "description": "The genius car doctor is online car service website.In this website, we provide some car service.What Technology integrated:  Firebase integrated for user authentication JWT integrated for verify the real user MongoDb for stored data Heroku cloud platform for service supporting. What User can Do:  Users can see different services Users can buy a service that their needs The user must be logged in to the purchase To purchase order user need to fill their address and phone number, already filled their name ,email and service name After place order User can see their orders list A user can add new service User can manage previous service, and can do delete.",
    "technology": "HTML5, CSS3, React-Bootstrap, JavaScript ,React ,React Router, Firebase, Json Web Token For verify ,MongoDB, Heroku",
    "github": "https://github.com/EmranSWE/the-car-doctor",
    "live": "https://genius-car-services-84f83.web.app/",
    "img": "https://i.ibb.co/c6c73f5/car-doctor.png"
  },
  {
    "_id": "6386f701194604e353da0015",
    "name": "Sky Device Shop",
    "description": "Sky Device Shop is JavaScript React Functional Website. A user can add to cart a product, review a product, and shipment a product.What Customer can Do: A user can add to cart a items. Can review items and Remove from review Can proceed to shipment a items.",
    "technology": "Front-End:\tHTML5, CSS3, Bootstrap ,JavaScript ,React, ReactRouter   Back-End:\tNodeJs, ExpressJs, MongoDb,cors, dotenv Tools:\timgbb, Firebase, Heroku, Git",
    "github": "https://github.com/EmranSWE/sky-device-shop",
    "live": "https://sky-device-shop.web.app/",
    "img": "https://i.ibb.co/DWs42w8/Sky-Device.png"
  },
  {
    "_id": "6386f7e1194604e353da0016",
    "name": "Temperature With Open Weather",
    "description": "Temperature With Open Weather is a Temperature-searching project. Anyone can search for the Temperature by their city name. It is Temparture searching api projects. User can finding their city Temparture by searching city name.  Where:  A User can their city name Get the current Temparture.",
    "technology": "HTML5 ,CSS3, Bootstrap ,JavaScript, Open Weather Api",
    "github": "https://github.com/EmranSWE/temperature-with-open-weather",
    "live": "https://emranswe.github.io/temperature-with-open-weather/",
    "img": "https://i.ibb.co/SN7RNcm/temp.png"
  },
  {
    "_id": "6386f885194604e353da0017",
    "name": "Hp Pavilion Gaming Js Project",
    "description": "Hp Pavilion Gaming Js projects is a primary JavaScript Functional Project. Customers can customize the products. It is a basic function oriented javaScript project.  Where:  A User can select memory type Select different type of storage Select delivery option, it may be regular or express User can use promo code.If promo code will be valid, then they get 10% off. Finally see the total price",
    "technology": "HTML5, CSS3, TailwindCss, JavaScript",
    "github": "https://github.com/EmranSWE/hp-pavilion-gaming-js-project",
    "live": "https://emranswe.github.io/hp-pavilion-gaming-js-project/",
    "img": "https://i.ibb.co/GWPdqc3/hp-pavilion.png"
  },
  {
    "_id": "6386fb8c194604e353da0018",
    "name": "The Meal DB",
    "description": "In MealDB website user can search meals by meals name.",
    "technology": "HTML5, Bootstrap , JavaScript",
    "github": "https://github.com/EmranSWE/the-meal-db-api",
    "live": "https://emranswe.github.io/the-meal-db-api/",
    "img": "https://i.ibb.co/6ZqXynF/Mealdb.png"
  },
  {
    "_id": "6386fc67194604e353da0019",
    "name": "Book Archive Shop",
    "description": "Book Archive Shop is a book-searching project. Anyone can search for the book by book name.It is a basic application Programming Interface projects.User can finding their drea book by using book name.  Where:  A User can search book Get totall books details See the book title, published year, details, subject, book cover image",
    "technology": "HTML5 CSS3 JavaScript Open Api.",
    "github": "https://emranswe.github.io/book-archieve-shop/",
    "live": "https://emranswe.github.io/book-archieve-shop/",
    "img": "https://i.ibb.co/m4hfGLN/book.png"
  },
  {
    "_id": "6386fd1e194604e353da001a",
    "name": "Insta Sohor Bug Fixing",
    "description": "On the insta sohor website I have fixed some bugs. I have found some bugs in the website then I fixed the bug.Whai I fixed:  Fixed and push the like number,and display the liked post on liked button Bug fixed where the text length is less then 30, then full text displayed on text content Fixed and display every user image on their profile picture Clear previous Post and Add only Liked post by user Clear previous Post and Add only reported post by user",
    "technology": "Chrome dev tools",
    "github": "https://github.com/EmranSWE/insta-shohor-bug-fixing",
    "live": "https://emranswe.github.io/insta-shohor-bug-fixing/",
    "img": "https://i.ibb.co/qR12pZD/Insta-Sohor.png"
  },
  {
    "_id": "6386fdbf194604e353da001b",
    "name": "JavaScript Pin Matcher",
    "description": "This is Pin and Match Generator project. This website has two section. Left side: User can generete a pin, Right Side: User can write a pin.  Then we have main content section, where: A user can see the:  User can generete a pin Then user can input that pin. If pin is matched then below a message is displayed.",
    "technology": "HTML5, CSS3, Bootstrap v5.2 ,JavaScript",
    "github": "https://github.com/EmranSWE/generate-and-match-pin",
    "live": "https://emranswe.github.io/generate-and-match-pin/",
    "img": "https://i.ibb.co/F0Vf0DM/pin-matcher.png"
  },
  {
    "_id": "6386fea1194604e353da001c",
    "name": "Responsive Honda CBR Website",
    "description": "This is Responsive Honda CBR landing pages. This website has many several section. In the top: Header section ,where user can see:  Menubar and Heading banner Then we have main content section, where: A user can see the:  Feature Bikes Latest News What clients says Frequently asked Question Next footer section:  Copyright and some navigation",
    "technology": "HTML5 ,CSS3, Bootstrap v5.2 ,Photopea for Photo editing, Fontawesome icons ,Google Font",
    "github": "https://github.com/EmranSWE/responsive-honda-cbr-website",
    "live": "https://emranswe.github.io/responsive-honda-cbr-website/",
    "img": "https://i.ibb.co/jLSq67v/honda.png"
  }
]
